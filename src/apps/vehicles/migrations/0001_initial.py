# Generated by Django 5.2.4 on 2025-07-27 05:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('enterprises', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('vehicle_type', models.CharField(choices=[('noname', 'noname'), ('sedan', 'Легковой'), ('truck', 'Грузовой'), ('bus', 'Автобус'), ('suv', 'Внедорожник')], max_length=50)),
                ('fuel_tank_capacity_liters', models.PositiveIntegerField(help_text='Объем бака л')),
                ('load_capacity_kg', models.PositiveIntegerField(help_text='Грузоподъемность кг')),
                ('seats_number', models.PositiveIntegerField(help_text='Количество мест')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['id'], name='vehicles_br_id_567c7a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='имя')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='зарплата')),
                ('experience_years', models.PositiveIntegerField(verbose_name='стаж работы (лет)')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drivers', to='enterprises.enterprise', verbose_name='предприятие')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='цена')),
                ('year_of_manufacture', models.PositiveIntegerField(verbose_name='год выпуска')),
                ('mileage', models.PositiveIntegerField(verbose_name='пробег')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата внесения в базу')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления в базе')),
                ('car_number', models.CharField(max_length=6, unique=True, verbose_name='номер машины')),
                ('purchase_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Время покупки')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.brand', verbose_name='бренд')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='enterprises.enterprise', verbose_name='предприятие')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный водитель')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_vehicles', to='vehicles.driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_drivers', to='vehicles.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='drivers',
            field=models.ManyToManyField(related_name='vehicles', through='vehicles.VehicleDriver', to='vehicles.driver', verbose_name='водители'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['id'], name='vehicles_dr_id_2c6fca_idx'),
        ),
        migrations.AddConstraint(
            model_name='vehicledriver',
            constraint=models.UniqueConstraint(fields=('vehicle', 'driver'), name='unique_vehicle_driver'),
        ),
        migrations.AddConstraint(
            model_name='vehicledriver',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('driver', 'is_active'), name='unique_active_driver', violation_error_message='Данный водитель уже назначен активным для одного из автомобилей.'),
        ),
        migrations.AddConstraint(
            model_name='vehicledriver',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('vehicle', 'is_active'), name='unique_active_vehicle', violation_error_message='Не может быть назначено больше одного водителя.'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['id'], name='vehicles_ve_id_9f8014_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['uuid'], name='vehicles_ve_uuid_1e5e99_idx'),
        ),
    ]
