name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgis/postgis:16-3.5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: vehicle_accounting_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          binutils \
          libproj-dev \
          gdal-bin \
          libgdal-dev \
          postgis \
          postgresql-client \
          gcc \
          gettext

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "IS_DEBUG=True" >> $GITHUB_ENV
        echo "PGDB_PASSWORD=postgres" >> $GITHUB_ENV
        echo "PGDB_HOST=localhost" >> $GITHUB_ENV
        echo "PGDB_PORT=5432" >> $GITHUB_ENV
        echo "PGDB_USER=postgres" >> $GITHUB_ENV
        echo "PGDB_NAME=vehicle_accounting_test" >> $GITHUB_ENV
        echo "DJANGO_SECRET_KEY=django-insecure-test-key-for-ci" >> $GITHUB_ENV
        echo "GRAPHHOPPER_API_KEY=" >> $GITHUB_ENV
        echo "GEOPIFY_API_KEY=" >> $GITHUB_ENV

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Run migrations
      run: |
        python manage.py migrate

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput

    - name: Run tests
      run: |
        python manage.py test
